rm(coex)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
rm(coex)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:133,1:133]
rm(coex)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:134,1:134]
rm(coex)
set.seed(1)
dvalue <- high_ord_degree(coex, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:140,1:140]
rm(coex)
set.seed(1)
dvalue <- high_ord_degree(coex, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
tail(dvalue)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:150,1:150]
rm(coex)
set.seed(1)
dvalue <- high_ord_degree(coex, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
coex6[1,]
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:200,1:200]
rm(coex)
set.seed(1)
dvalue <- high_ord_degree(coex, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
Rcpp::sourceCpp('E:/research/1_31_2022/HOD_cpp.cpp')
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex1 <- coex[1:128,1:128]
coex2 <- coex[1:129,1:129]
coex3 <- coex[1:130,1:130]
coex4 <- coex[1:131,1:131]
coex5 <- coex[1:132,1:132]
coex6 <- coex[1:200,1:200]
rm(coex)
#set.seed(1)
#dvalue <- high_ord_degree(coex, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex1, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex2, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex3, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex4, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex5, 3)
set.seed(2)
dvalue2 <- HOD_cpp(coex6, 3)
?package.skeleton
install.packages("RcppArmadillo")
Rcpp::sourceCpp('E:/research/2_14_2022/try_arma.cpp')
add_two(1:3)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(matrix(1:9, 3, 3))
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(matrix(1:9, 3, 3))
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(matrix(1:9, 3, 3))
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(matrix(1:9, 3, 3))
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(matrix(1:9, 3, 3))
a = matrix(1:9, 3, 3)
a %*% a
t(a) %*% a
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(a)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(a)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
rowMeans(a)
3.464102^2
10.95445^2
18.33030^2
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
library(tidyverse)
data <- rnorm(5000000) %>% matrix(nrow = 5000)
install.packages("broom")
library(tidyverse)
data <- rnorm(5000000) %>% matrix(nrow = 5000)
ref <- matrix(colMeans(data), 5000, 1000, byrow = T)
data1 <- (data <= ref)* 1
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('F:/multi_methods_simulation_14/data/coexp.cpp')
data <- rnorm(5000000) %>% matrix(nrow = 5000)
ref <- matrix(colMeans(data), 5000, 1000, byrow = T)
data1 <- (data <= ref)* 1
a <- coexpp(data1)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('F:/multi_methods_simulation_14/data/coexp.cpp')
data <- rnorm(5000000) %>% matrix(nrow = 5000)
ref <- matrix(colMeans(data), 5000, 1000, byrow = T)
data1 <- (data <= ref)* 1
b <- coexp_arma(data1)
a <- coexpp(data1)
rm(data, ref)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
b <- coexp_arma(data1)
sum(data1[,1])
sum(data1[,2])
sum(data1[,2] & data1[,1])
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
b <- coexp_arma(data1)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
library(microbenchmark)
microbenchmark
?microbenchmark
bench <- microbenchmark(cpp = coexpp(data1), cpparma = coexp_arma(data1))
bench <- microbenchmark(cpp = coexpp(data1), cpparma = coexp_arma(data1), times = 10)
bench
library(tidyverse)
data <- rnorm(5000000) %>% matrix(nrow = 5000)
ref <- matrix(colMeans(data), 5000, 1000, byrow = T)
data1 <- (data <= ref)* 1
rm(data, ref)
Rcpp::sourceCpp('E:/research/2_14_2022/coexp_arma.cpp')
Rcpp::sourceCpp('F:/multi_methods_simulation_14/data/coexp.cpp')
a <- coexpp(data1)
b <- coexp_arma(data1)
sum(a!=b)
sum(a-b < 1e-5)
sum(a-b < 1e-4)
sum(a-b < 1e-3)
a[1,2]
b[1,2]
sum((a-b) < 1e-3)
sum((a-b) < 0.001)
sum(abs(a-b) < 0.001)
sum(abs(a-b) > 0.001)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex <- coex[1:100,1:100]
a <- HOC_arma(coex)
b <- high_ord_degree(coex)
high_ord_degree <- function(data_mat, thres = 3, m = 10, abso = T, niter = 100){
diag(data_mat) <- 0
if (abso){
data_thres <- abs(data_mat) >= thres
} else {
data_thres <- data_mat >= thres
}
#idx <- which(rowSums(data_thres) >= m)
idx <- 1:nrow(data_mat)
data_temp <- data_thres[idx, idx] * 1
rm(data_thres)
n <- length(idx)
deg1 <- rowSums(data_temp)
N1t <- lapply(1:n, function(x){temp1 <- which(data_temp[,x] == 1); return(temp1)})
D2 <- sapply(1:n, function(x){l <- length(N1t[[x]]); deg <- sum(data_temp[N1t[[x]], N1t[[x]]]); return(deg / l / (l-1))})
N2t <- lapply(1:n, function(x){as.numeric(names(table(unlist(N1t[N1t[[x]]]))))})
weight <- lapply(1:n, function(x){c(unname(table(unlist(N1t[N1t[[x]]]))))})
D3 <- sapply(1:n, function(x){l <- length(N2t[[x]]); deg <- c(); for (i in 1:niter){if (l > m){temp_id <- sample(N2t[[x]], m, F, weight[[x]])} else {temp_id <- N2t[[x]]}; a <- min(m, l); deg[i] <- sum(data_temp[temp_id, temp_id]) / a / (a-1)}; return(mean(deg))})
return(data.frame(idx = idx, d1 = deg1, d2 = D2, d3 = D3))
}
b <- high_ord_degree(coex)
sum(a!=b$d2)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
a <- HOC_arma(coex)
b <- high_ord_degree(coex)
sum(a!=b$d2)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/1_31_2022/HOD_cpp.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/1_31_2022/HOD_cpp.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
high_ord_degree <- function(data_mat, thres = 3, m = 10, abso = T, niter = 100){
diag(data_mat) <- 0
if (abso){
data_thres <- abs(data_mat) >= thres
} else {
data_thres <- data_mat >= thres
}
#idx <- which(rowSums(data_thres) >= m)
idx <- 1:nrow(data_mat)
data_temp <- data_thres[idx, idx] * 1
rm(data_thres)
n <- length(idx)
deg1 <- rowSums(data_temp)
N1t <- lapply(1:n, function(x){temp1 <- which(data_temp[,x] == 1); return(temp1)})
D2 <- sapply(1:n, function(x){l <- length(N1t[[x]]); deg <- sum(data_temp[N1t[[x]], N1t[[x]]]); return(deg / l / (l-1))})
N2t <- lapply(1:n, function(x){as.numeric(names(table(unlist(N1t[N1t[[x]]]))))})
weight <- lapply(1:n, function(x){c(unname(table(unlist(N1t[N1t[[x]]]))))})
D3 <- sapply(1:n, function(x){l <- length(N2t[[x]]); deg <- c(); for (i in 1:niter){if (l > m){temp_id <- sample(N2t[[x]], m, F, weight[[x]])} else {temp_id <- N2t[[x]]}; a <- min(m, l); deg[i] <- sum(data_temp[temp_id, temp_id]) / a / (a-1)}; return(mean(deg))})
return(data.frame(idx = idx, d1 = deg1, d2 = D2, d3 = D3))
}
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex <- coex[1:100,1:100]
a <- HOC_arma(coex)
b <- HOC_cpp(coex)
Rcpp::sourceCpp('E:/research/1_31_2022/HOD_cpp.cpp')
b <- HOD_cpp(coex)
Rcpp::sourceCpp('E:/research/1_31_2022/HOD_cpp.cpp')
c <- high_ord_degree(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
a <- HOC_arma(coex)
b <- HOD_cpp(coex)
c <- high_ord_degree(coex)
set.seed(1)
a <- HOC_arma(coex)
set.seed(1)
b <- HOD_cpp(coex)
set.seed(1)
c <- high_ord_degree(coex)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex <- coex[1:1000,1:1000]
set.seed(1)
a <- HOC_arma(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
a <- HOC_arma(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
a <- HOC_arma(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
set.seed(1)
a <- HOC_arma(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
set.seed(1)
a <- HOC_arma(coex)
set.seed(1)
c <- high_ord_degree(coex)
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
set.seed(1)
a <- HOC_arma(coex)
set.seed(1)
c <- high_ord_degree(coex)
coex <- coex[1:1000,1:1000]
library(microbenchmark)
bench <- microbenchmark(a <- HOC_arma(coex), c <- high_ord_degree(coex), times = 10)
bench
high_ord_degree <- function(data_mat, thres = 3, m = 10, abso = T, niter = 100){
diag(data_mat) <- 0
if (abso){
data_thres <- abs(data_mat) >= thres
} else {
data_thres <- data_mat >= thres
}
#idx <- which(rowSums(data_thres) >= m)
idx <- 1:nrow(data_mat)
data_temp <- data_thres[idx, idx] * 1
rm(data_thres)
n <- length(idx)
deg1 <- rowSums(data_temp)
N1t <- lapply(1:n, function(x){temp1 <- which(data_temp[,x] == 1); return(temp1)})
D2 <- sapply(1:n, function(x){l <- length(N1t[[x]]); deg <- sum(data_temp[N1t[[x]], N1t[[x]]]); return(deg / l / (l-1))})
N2t <- lapply(1:n, function(x){as.numeric(names(table(unlist(N1t[N1t[[x]]]))))})
weight <- lapply(1:n, function(x){c(unname(table(unlist(N1t[N1t[[x]]]))))})
D3 <- sapply(1:n, function(x){l <- length(N2t[[x]]); deg <- c(); for (i in 1:niter){if (l > m){temp_id <- sample(N2t[[x]], m, F, weight[[x]])} else {temp_id <- N2t[[x]]}; a <- min(m, l); deg[i] <- sum(data_temp[temp_id, temp_id]) / a / (a-1)}; return(mean(deg))})
return(data.frame(idx = idx, d1 = deg1, d2 = D2, d3 = D3))
}
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
coex <- coex[1:1000,1:1000]
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma.cpp')
library(microbenchmark)
bench <- microbenchmark(a <- HOC_arma(coex), c <- high_ord_degree(coex), times = 10)
bench
coex <- readRDS("F:/multi_methods_simulation_14/data/1_coexp.rds")
bench <- microbenchmark(a <- HOC_arma(coex), c <- high_ord_degree(coex), times = 10)
bench
coex <- coex[1:1000,1:1000]
set.seed(1)
a <- HOC_arma(coex)
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma_v1.cpp')
set.seed(1)
b <- HOC_arma(coex)
sum(a$D3!=b$D3)
sum(a$D3-b$D3>0.001)
which(a$D3-b$D3>0.001)
a$D3[286]
b$D3[286]
a$D2[286]
a$D1[286]
a$D1[543]
a$D1[739]
Rcpp::sourceCpp('E:/research/2_14_2022/HOC_arma_v1.cpp')
b <- HOC_arma(coex)
sum(a$D3-b$D3>0.01)
max(a$D3-b$D3)
bench <- microbenchmark(a <- HOC_arma(coex), c <- high_ord_degree(coex), times = 10)
bench
a$D1[1:300]
115^2-4 * 3 *38*39
score <- 0
p <- 0.015
temp <- 1-p
for (i in 1:39){
score  <- score + temp
temp <- temp * (1 - (i + 1) * p)
}
score <- 0
p <- 0.015
temp <- 1-p
for (i in 1:39){
score  <- score + temp * i * (i+1) * p
temp <- temp * (1 - (i + 1) * p)
}
score <- 0
p <- 0.015
temp <- 1-p
for (i in 1:39){
score  <- score + temp
temp <- temp * (1 - (i + 1) * p)
}
library(DESeq2)
model.matrix
?model.matrix
?p.adjust
libbrary(edgeR)
library(edgeR)
?voom
data <- readRDS("F:/multi_methods_simulation_14/data/1_matrix.rds")
a <- edgeR::cpm(data)
dge <- DGEList(counts = data)
dge <- edgeR::calcNormFactors(dge)
b <- cpm(dge)
dge <- DGEList(counts = data)
dge <- edgeR::calcNormFactors(dge)
b <- cpm(dge)
b[1:5,1:5]
a[1:5,1:5]
warnings()
?p.adjust
library(MAST)
?zlm.SingleCellAssay
data <- readRDS("F:/multi_methods_simulation_14/data/1_matrix.rds")
Y <- readRDS("F:/multi_methods_simulation_14/data/1_matrix.rds")
gene_name <- 1:nrow(Y)
counts <- Y
rownames(counts) <- gene_name
colnames(counts) <- 1:ncol(Y)
cell_metadata <- matrix(0, ncol(Y), 1) %>% data.frame()
library(tidyverse)
library(monocle3)
gene_name <- 1:nrow(Y)
counts <- Y
rownames(counts) <- gene_name
colnames(counts) <- 1:ncol(Y)
cell_metadata <- matrix(0, ncol(Y), 1) %>% data.frame()
group <- rep(1:5, each = 1200)
group
cell_metadata[,1] <- factor(group)
rownames(cell_metadata) <- 1:ncol(Y)
colnames(cell_metadata) <- c("cell_type")
gene_metadata <- matrix(gene_name, nrow(counts), 1)
rownames(gene_metadata) <- gene_name
colnames(gene_metadata) <- c("gene_short_name")
cds <- new_cell_data_set(counts,
cell_metadata = cell_metadata,
gene_metadata = gene_metadata)
gene_fits1 <- fit_models(cds, model_formula_str = "~cell_type")
fit_coefs1 <- coefficient_table(gene_fits1)
emb_time_terms1 <- data.frame(fit_coefs1$gene_id, fit_coefs1$q_value)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds, reduction_method = "UMAP")
gene_fits2 <- fit_models(cds, model_formula_str = "~cell_type")
fit_coefs2 <- coefficient_table(gene_fits2)
emb_time_terms2 <- data.frame(fit_coefs2$gene_id, fit_coefs2$q_value)
table(emb_time_terms1$fit_coefs1.gene_id)
fit_models
smart_es_apply
library(M3Drop)
?M3DropConvertData
data <- readRDS("F:/multi_methods_simulation_14/data/1_matrix.rds")
#norm <- M3DropConvertData(log2(norm+1), is.log=TRUE, pseudocount=1)
M3Drop_genes <- M3DropFeatureSelection(norm, mt_method="fdr", mt_threshold=0.05)
rownames(data) <- 1:nrow(data)
norm <- M3DropConvertData(data, is.counts=TRUE)
#norm <- M3DropConvertData(log2(norm+1), is.log=TRUE, pseudocount=1)
M3Drop_genes <- M3DropFeatureSelection(norm, mt_method="fdr", mt_threshold=0.05)
a <- p.adjust(M3Drop_genes$p.value)
a <- p.adjust(M3Drop_genes$p.value, method = "BH")
M3DropFeatureSelection
#norm <- M3DropConvertData(log2(norm+1), is.log=TRUE, pseudocount=1)
M3Drop_genes <- M3DropFeatureSelection(norm, mt_method="BH", mt_threshold=0.05)
a <- p.adjust(M3Drop_genes$p.value, method = "BH")
library(singleCellHaystack)
library(scry)
?devianceFeatureSelection
haystack
data.expression <- readRDS("F:/multi_methods_simulation_14/data/1_matrix.rds")
median.per.gene <- apply(data.expression,1,median)
data.detection <- data.expression > median.per.gene
general.detection = apply(data.detection, 2, sum)
data.pca <- prcomp(data.expression)
data.pc <- data.pca$rotation[,1:50]
#set.seed(123)
res.pc50.adv <- haystack(x = data.pc, detection = data.detection,
method = "highD", use.advanced.sampling = general.detection)
a <- 10^res.pc50.adv$results$log.p.vals
b <- p.adjust(a, method = "bonferroni")
c <- 10^res.pc50.adv$results$log.p.adj
which(b <= 0.05)
setwd("E:/research/2_21_2022/CFNet/code")
